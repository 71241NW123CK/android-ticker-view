apply plugin: 'com.android.library'
apply plugin: 'maven'

import org.ajoberstar.grgit.*

def gitHubRepoUri = "git@github.com:71241NW123CK/maven-repo"
def mavenGroup = 'party.treesquaredcode.android'
group = mavenGroup
def name = 'ticker-view'
version = '0.0.5'
def projectDirectory = new File('')
projectDirectory = projectDirectory.getAbsoluteFile()
def projectParentDirectory = projectDirectory.getParentFile()
def publishAbsolutePath = "${projectParentDirectory.absolutePath}/${group}.${name}.publish/"
def publishDirectory = new File(publishAbsolutePath)

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.ajoberstar:gradle-git:1.3.0'
    }
}

android {
	compileSdkVersion 23
	buildToolsVersion '23.0.1'
	defaultConfig {
		minSdkVersion 15
		targetSdkVersion 23
		versionCode 1
		versionName '1.0'
	}
}

task preparePublishDestination << {
	//clear the directory for the repo
	if (publishDirectory.exists()) {
		publishDirectory.deleteDir()
	}
	publishDirectory.mkdirs()
	//clone the repo
	Grgit.clone(dir: publishAbsolutePath, uri: gitHubRepoUri)
}

uploadArchives {
	repositories.mavenDeployer {
		repository(url: "file://$publishAbsolutePath")
		pom.project {
			artifactId name
		}
	}
}
uploadArchives.dependsOn preparePublishDestination

task publishToGitHubMaven << {
	def grgit = Grgit.open(dir: publishAbsolutePath)
	grgit.add(patterns: ['.'])
	grgit.commit(message: "publish ${mavenGroup}:${name}:${version}")
	grgit.push()
	publishDirectory.deleteDir()
}
publishToGitHubMaven.dependsOn uploadArchives
